/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.10).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.InlineResponse200;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-08-05T11:16:32.747Z[GMT]")
@Api(value = "checkValidation", description = "the checkValidation API")
public interface CheckValidationApi {

    @ApiOperation(value = "Checks if user able to validatte", nickname = "checkValidation", notes = "Returns 1 if user can validate, else 0 ", response = InlineResponse200.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "1 or 0 if validation is possible", response = InlineResponse200.class),
        @ApiResponse(code = 400, message = "bad input parameter") })
    @RequestMapping(value = "/checkValidation",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<InlineResponse200> checkValidation(@NotNull @ApiParam(value = "user name to check if validation allowed for", required = true) @Valid @RequestParam(value = "user name", required = true) String userName);

}
